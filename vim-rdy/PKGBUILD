# Maintainer: Andrew DeMaria <lostonamountain@gmail.com>
# Contributor: Thomas Dziedzic <gostrc@gmail.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: tobias [ tobias at archlinux org ]
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgbase=vim-rdy
_prevpkgbase=vim
pkgname=("vim-rdy" "gvim-rdy" "vim-runtime-rdy")
_prevpkgname=("vim" "gvim" "vim-runtime")
_topver=7.4
_patchlevel=617
_tag=v${_topver/./-}-${_patchlevel}
_versiondir="vim${_topver//./}"
pkgver=${_topver}.${_patchlevel}
pkgrel=2
arch=('i686' 'x86_64')
license=('custom:vim')
url="http://www.vim.org"
makedepends=('gpm' 'python2' 'python' 'ruby' 'libxt' 'desktop-file-utils' 'gtk2' 'lua' 'mercurial' 'git' 'cmake' 'clang')
# It would be great to use downloadable archives https://vim.googlecode.com/archive/$tag.tar.gz
# unfortunately its content changes each time you download one (files modification date is different)
source=("${pkgbase}-repo::hg+https://vim.googlecode.com/hg#tag=${_tag}"
        'vimrc'
        'archlinux.vim'
        'gvim.desktop'
        "additional-runtime"::'git://github.com/muff1nman/Vim'
        'git+https://github.com/ekalinin/Dockerfile.vim.git'
        'git+https://github.com/vhdirk/vim-cmake.git'
        'git+https://github.com/kchmck/vim-coffee-script.git'
        'git+https://github.com/wincent/Command-T.git'
        'git://github.com/tomtom/vimball.rb.git'
        'git://github.com/tomtom/vimscriptuploader.rb.git'
        'git://github.com/scrooloose/nerdcommenter.git'
        'git+https://github.com/tikhomirov/vim-glsl'
        'git+https://github.com/sellerie/vim-gradle.git'
        'git+https://github.com/zirrostig/vim-jack-syntax.git'
        'git://github.com/pangloss/vim-javascript.git'
        'git://github.com/tpope/vim-markdown.git'
        'git://github.com/scrooloose/nerdtree.git'
        'git://github.com/sophacles/vim-processing.git'
        'git://github.com/wlangstroth/vim-racket.git'
        'git://github.com/vim-ruby/vim-ruby.git'
        'git://github.com/vim-scripts/Smooth-Scroll.git'
        'git://github.com/justinmk/vim-syntax-extra.git'
        'git://github.com/godlygeek/tabular.git'
        'git://github.com/muff1nman/vim-template.git'
        'git://github.com/svermeulen/vim-easyclip.git'
        'git+https://github.com/thoughtbot/vim-rspec.git'
        'git://github.com/sukima/xmledit.git'
        'git+https://github.com/avakhov/vim-yaml'
        'git+https://github.com/Valloric/YouCompleteMe.git'
        'git+https://github.com/kennethreitz/requests'
        'git+https://github.com/ross/requests-futures'
        'git+https://github.com/Valloric/ycmd'
        'git+https://github.com/nosami/OmniSharpServer'
        'git+https://github.com/bewest/argparse'
        'git+https://github.com/defnull/bottle'
        'git+https://github.com/slezica/python-frozendict'
        'git+https://github.com/davidhalter/jedi'
        'git+https://github.com/Pylons/waitress'
        )
md5sums=('SKIP'
         'b9d4dcb9d3ee2e151dc4be1e94934f6a'
         'f3c8931847a12949bdd14c9d48fdabb3'
         'd90413bd21f400313a785bb4010120cd'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP')

prepare() {
  pushd "$srcdir/additional-runtime"
  git submodule init vim/bundle/Dockerfile
  git config submodule.vim/bundle/Dockerfile.url "$srcdir/Dockerfile.vim"
  git submodule update vim/bundle/Dockerfile
  git submodule init vim/bundle/cmake
  git config submodule.vim/bundle/cmake.url "$srcdir/vim-cmake"
  git submodule update vim/bundle/cmake
  git submodule init vim/bundle/coffee-script
  git config submodule.vim/bundle/coffee-script.url "$srcdir/vim-coffee-script"
  git submodule update vim/bundle/coffee-script
  git submodule init vim/bundle/command-t
  git config submodule.vim/bundle/command-t.url "$srcdir/Command-T"
  git submodule update vim/bundle/command-t
  pushd vim/bundle/command-t
  git submodule init vendor/vimball
  git config submodule.vendor/vimball.url "$srcdir/vimball.rb"
  git submodule update vendor/vimball
  git submodule init vendor/vimscriptuploader
  git config submodule.vendor/vimscriptuploader.url "$srcdir/vimscriptuploader.rb"
  git submodule update vendor/vimscriptuploader
  popd
  git submodule init vim/bundle/commenting
  git config submodule.vim/bundle/commenting.url "$srcdir/nerdcommenter"
  git submodule update vim/bundle/commenting
  git submodule init vim/bundle/glsl
  git config submodule.vim/bundle/glsl.url "$srcdir/vim-glsl"
  git submodule update vim/bundle/glsl
  git submodule init vim/bundle/gradle
  git config submodule.vim/bundle/gradle.url "$srcdir/vim-gradle"
  git submodule update vim/bundle/gradle
  git submodule init vim/bundle/jack
  git config submodule.vim/bundle/jack.url "$srcdir/vim-jack-syntax"
  git submodule update vim/bundle/jack
  git submodule init vim/bundle/javascript
  git config submodule.vim/bundle/javascript.url "$srcdir/vim-javascript"
  git submodule update vim/bundle/javascript
  git submodule init vim/bundle/markdown
  git config submodule.vim/bundle/markdown.url "$srcdir/vim-markdown"
  git submodule update vim/bundle/markdown
  git submodule init vim/bundle/nerdtree
  git config submodule.vim/bundle/nerdtree.url "$srcdir/nerdtree"
  git submodule update vim/bundle/nerdtree
  git submodule init vim/bundle/processing
  git config submodule.vim/bundle/processing.url "$srcdir/vim-processing"
  git submodule update vim/bundle/processing
  git submodule init vim/bundle/racket
  git config submodule.vim/bundle/racket.url "$srcdir/vim-racket"
  git submodule update vim/bundle/racket
  git submodule init vim/bundle/ruby
  git config submodule.vim/bundle/ruby.url "$srcdir/vim-ruby"
  git submodule update vim/bundle/ruby
  git submodule init vim/bundle/smoothScroll
  git config submodule.vim/bundle/smoothScroll.url "$srcdir/Smooth-Scroll"
  git submodule update vim/bundle/smoothScroll
  git submodule init vim/bundle/syntax-extra-lex-bison-c
  git config submodule.vim/bundle/syntax-extra-lex-bison-c.url "$srcdir/vim-syntax-extra"
  git submodule update vim/bundle/syntax-extra-lex-bison-c
  git submodule init vim/bundle/tabular
  git config submodule.vim/bundle/tabular.url "$srcdir/tabular"
  git submodule update vim/bundle/tabular
  git submodule init vim/bundle/template
  git config submodule.vim/bundle/template.url "$srcdir/vim-template"
  git submodule update vim/bundle/template
  git submodule init vim/bundle/vim-easyclip
  git config submodule.vim/bundle/vim-easyclip.url "$srcdir/vim-easyclip"
  git submodule update vim/bundle/vim-easyclip
  git submodule init vim/bundle/vim-rspec
  git config submodule.vim/bundle/vim-rspec.url "$srcdir/vim-rspec"
  git submodule update vim/bundle/vim-rspec
  git submodule init vim/bundle/xmlEdit
  git config submodule.vim/bundle/xmlEdit.url "$srcdir/xmledit"
  git submodule update vim/bundle/xmlEdit
  git submodule init vim/bundle/yaml
  git config submodule.vim/bundle/yaml.url "$srcdir/vim-yaml"
  git submodule update vim/bundle/yaml
  git submodule init vim/bundle/youcompleteme
  git config submodule.vim/bundle/youcompleteme.url "$srcdir/YouCompleteMe"
  git submodule update vim/bundle/youcompleteme
  pushd vim/bundle/youcompleteme
  git submodule init third_party/requests
  git config submodule.third_party/requests.url "$srcdir/requests"
  git submodule update third_party/requests
  git submodule init third_party/requests-futures
  git config submodule.third_party/requests-futures.url "$srcdir/requests-futures"
  git submodule update third_party/requests-futures
  git submodule init third_party/ycmd
  git config submodule.third_party/ycmd.url "$srcdir/ycmd"
  git submodule update third_party/ycmd
  pushd third_party/ycmd
  git submodule init third_party/OmniSharpServer
  git config submodule.third_party/OmniSharpServer.url "$srcdir/OmniSharpServer"
  git submodule update third_party/OmniSharpServer
  git submodule init third_party/argparse
  git config submodule.third_party/argparse.url "$srcdir/argparse"
  git submodule update third_party/argparse
  git submodule init third_party/bottle
  git config submodule.third_party/bottle.url "$srcdir/bottle"
  git submodule update third_party/bottle
  git submodule init third_party/frozendict
  git config submodule.third_party/frozendict.url "$srcdir/python-frozendict"
  git submodule update third_party/frozendict
  git submodule init third_party/jedi
  git config submodule.third_party/jedi.url "$srcdir/jedi"
  git submodule update third_party/jedi
  git submodule init third_party/waitress
  git config submodule.third_party/waitress.url "$srcdir/waitress"
  git submodule update third_party/waitress
  popd
  popd
  popd

  cd ${pkgbase}-repo

  _latesttag=$(hg parents --template '{latesttag}' -r default)
  if (( $_tag != $_latesttag )); then
    printf 'You are not building the latest revision!\n'
    printf "Consider updating to tag $_latesttag.\n"
  fi

  # define the place for the global (g)vimrc file (set to /etc/vimrc)
  sed -i 's|^.*\(#define SYS_.*VIMRC_FILE.*"\) .*$|\1|' \
    src/feature.h
  sed -i 's|^.*\(#define VIMRC_FILE.*"\) .*$|\1|' \
    src/feature.h

  (cd src && autoconf)

  cd ..
  for pkg in ${_prevpkgname[@]}
  do
    cp -a ${pkgbase}-repo ${pkg}-build
  done
}

build() {
  cd "${srcdir}"/vim-runtime-build

  ./configure \
    --prefix=/usr \
    --localstatedir=/var/lib/vim \
    --with-features=huge \
    --with-compiledby='Andrew DeMaria' \
    --enable-gpm \
    --enable-acl \
    --with-x=no \
    --disable-gui \
    --enable-multibyte \
    --enable-cscope \
    --disable-netbeans \
    --enable-perlinterp \
    --disable-pythoninterp \
    --disable-python3interp \
    --enable-rubyinterp \
    --disable-luainterp

  make


  cd "${srcdir}"/vim-build

  ./configure \
    --prefix=/usr \
    --localstatedir=/var/lib/vim \
    --with-features=huge \
    --with-compiledby='Andrew DeMaria' \
    --enable-gpm \
    --enable-acl \
    --with-x=yes \
    --disable-gui \
    --enable-multibyte \
    --enable-cscope \
    --disable-netbeans \
    --enable-perlinterp \
    --enable-pythoninterp \
    --disable-python3interp \
    --enable-rubyinterp \
    --enable-luainterp

  make

  cd "${srcdir}"/gvim-build

  ./configure \
    --prefix=/usr \
    --localstatedir=/var/lib/vim \
    --with-features=huge \
    --with-compiledby='Andrew DeMaria' \
    --enable-gpm \
    --enable-acl \
    --with-x=yes \
    --enable-gui=gtk2 \
    --enable-multibyte \
    --enable-cscope \
    --enable-netbeans \
    --enable-perlinterp \
    --enable-pythoninterp \
    --disable-python3interp \
    --enable-rubyinterp \
    --enable-luainterp

  make

	cd "$srcdir/additional-runtime"
	cmake \
		-DUSE_CLANG_COMPLETER=ON \
		-DUSE_SYSTEM_LIBCLANG=ON \
		.
	make
}

check() {
  # disable tests because they seem to freeze

  cd "${srcdir}"/vim-build

  #make test

  cd "${srcdir}"/gvim-build

  #make test
}

package_vim-rdy() {
  pkgdesc='vim ready to go with popular plugins and a default configuration'
  depends=("vim-runtime-rdy" 'gpm' 'ruby' 'lua' 'python2' 'acl')
  conflicts=('gvim' 'vim' 'gvim-rdy')
  provides=("vim=${pkgver}-${pkgrel}")

  cd "${srcdir}"/vim-build
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}"/usr/bin/{ex,view}

  # delete some manpages
  find "${pkgdir}"/usr/share/man -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd ${_mandir}
    rm -f ex.1 view.1 # provided by (n)vi
    rm -f evim.1    # this does not make sense if we have no GUI
  done

  # Runtime provided by runtime package
  rm -r "${pkgdir}"/usr/share/vim

  # license
  install -Dm644 runtime/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt
}

package_gvim-rdy() {
  pkgdesc='gvim ready to go with popular plugins and a default configuration'
  depends=("vim-runtime-rdy" 'gpm' 'ruby' 'libxt'
           'desktop-file-utils' 'gtk2' 'lua' 'python2')
  provides=("vim=${pkgver}-${pkgrel}")
  provides=("gvim")
  conflicts=('vim' 'gvim' 'vim-rdy')
  install=gvim.install

  cd "${srcdir}"/gvim-build
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}"/usr/bin/{ex,view}

  # delete some manpages
  find "${pkgdir}"/usr/share/man -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd ${_mandir}
    rm -f ex.1 view.1 # provided by (n)vi
  done

  # need to remove since this is provided by vim-runtime
  rm -r "${pkgdir}"/usr/share/vim

  # freedesktop links
  install -Dm644 "${srcdir}"/gvim.desktop \
    "${pkgdir}"/usr/share/applications/gvim.desktop
  install -Dm644 runtime/vim48x48.png "${pkgdir}"/usr/share/pixmaps/gvim.png

  # license
   install -Dm644 runtime/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt
}

package_vim-runtime-rdy() {
	cd "$srcdir/additional-runtime"
  oldpkgver=${pkgver}
	pkgver="${oldpkgver}.r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
  pkgdesc='Runtime for vim and gvim loaded up with additional configurations'
  provides=("vim-runtime=${oldpkgver}-${pkgrel}")
  conflicts=("vim-runtime")
  depends=('perl' 'gawk')
  backup=('etc/vimrc')

  cd "${srcdir}"/vim-runtime-build

  (cd src && make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" installruntime install-languages installtools)
  # man and bin files belong to 'vim'
  rm -r "${pkgdir}"/usr/share/man/ "${pkgdir}"/usr/bin/

  # Don't forget logtalk.dict
  install -Dm644 runtime/ftplugin/logtalk.dict \
    "${pkgdir}"/usr/share/vim/${_versiondir}/ftplugin/logtalk.dict

  # fix FS#17216
  sed -i 's|messages,/var|messages,/var/log/messages.log,/var|' \
    "${pkgdir}"/usr/share/vim/${_versiondir}/filetype.vim

  # patch filetype.vim for better handling of pacman related files
  sed -i "s/rpmsave/pacsave/;s/rpmnew/pacnew/;s/,\*\.ebuild/\0,PKGBUILD*,*.install/" \
    "${pkgdir}"/usr/share/vim/${_versiondir}/filetype.vim
  sed -i "/find the end/,+3{s/changelog_date_entry_search/changelog_date_end_entry_search/}" \
    "${pkgdir}"/usr/share/vim/${_versiondir}/ftplugin/changelog.vim

  # rc files
  install -Dm644 "${srcdir}"/vimrc "${pkgdir}"/etc/vimrc
  install -Dm644 "${srcdir}"/archlinux.vim \
    "${pkgdir}"/usr/share/vim/vimfiles/archlinux.vim

  # rgb.txt file
  install -Dm644 runtime/rgb.txt \
    "${pkgdir}"/usr/share/vim/${_versiondir}/rgb.txt

  # license
  install -dm755 "${pkgdir}"/usr/share/licenses/vim-runtime
  ln -s /usr/share/vim/${_versiondir}/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/vim-runtime/license.txt

  install -Dm644 "${srcdir}"/additional-runtime/vimrc "${pkgdir}"/etc/vimrc

  install -dm755 "${pkgdir}"/usr/share/vim/
  mv "${srcdir}"/additional-runtime/vim/* "${pkgdir}"/usr/share/vim/vimfiles
}

# vim:set sw=2 sts=2 et:
